{# What is Vagrant? #}
 {# Vagrant is the command line utility for managing the lifecycle of virtual machines. #}
{# Isolate dependencies and their configuration within a single disposable and consistent environment. #}



{# @https://developer.hashicorp.com/vagrant/docs/vagrantfile/version #}
VAGRANT_FILE_CONFIGURATION_VERSION = "2"

{# Number of nodes to provision in VM #}
NUM_NODES = {{ num_nodes }}


Vagrant.configure(VAGRANT_FILE_CONFIGURATION_VERSION) do | config |
    {# @https://developer.hashicorp.com/vagrant/docs/boxes #}
    config.vm.box = "{{ box_name }}"

    (1..NUM_NODES).each do | i |
        cofig.vm.define "node#{i}" do | node |
            {# config.vm.hostname (string) - The hostname the machine should have. Defaults to nil. #}
            {# If nil, Vagrant will not manage the hostname. If set to a string, the hostname will be set #}
            {# on boot. If set, Vagrant will update /etc/hosts on the guest with the configured hostname. #}
             
            node.vm.hostname = "node#{i}"
            {# @https://developer.hashicorp.com/vagrant/docs/networking/private_network #}
            node.vm.network "private_network", type: "dhcp"

            {# for more VM networking in Vagrant: @https://developer.hashicorp.com/vagrant/docs/networking #}
            
            node.vm.provider "virtualbox" do |virtual_box |
                virtual_box.memory = "{{ memory }}"
                virtual_box.cpus = "{{ cpus }}"
            end 

            {# Ansible docs: @https://docs.ansible.com/?extIdCarryOver=true&sc_cid=701f2000001OH7YAAW #}
            node.vm.provision "ansible" do | ansible |
                {# Ansible playbook: @https://docs.ansible.com/ansible/latest/playbook_guide/playbooks_intro.html#playbook-syntax #}
                ansible.playbook = "playbook.yml"

                {# Ansible Inventory for node management: @https://docs.ansible.com/ansible/latest/inventory_guide/intro_inventory.html #}
                ansible.inventory_path = "inventory"
            end
        end
    end
end


